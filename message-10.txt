local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/Jxereas/UI-Libraries/main/notification_gui_library.lua", true))()
Notification.new("success", "Auone", "Loaded script")
--[[
spawn(function()
while wait(30) do
local a = game:HttpGet('https://auone.monnn1.repl.co/au.php?key=' .. _G.key .. '&hardware=' ..game:GetService"DeviceIdService":GetDeviceId() )
function kick(r)
 game.Players.LocalPlayer:Kick(r)
end
if a == 'invaildkey' then kick('Invaild Key') 
return 0
end
if a == 'hardware' then 
kick('invaild hardware') return 0
end
end
end)
if _G.au ~= 2 or _G.au2 ~= true then
game.Players.LocalPlayer:Kick('nice try kiddo')
end
]]
--[[
getgenv().timehunt = 120
getgenv().stagery = 1
getgenv().maxtick = 150
getgenv().safe = true
getgenv().hunt = true
getgenv().buso = true
getgenv().team = 'Pirates'
getgenv().ken = true
]]
_G.stagery = getgenv().stagery
_G.maxtick = getgenv().maxtick
_G.timehunt = getgenv().timehunt
_G.safe = getgenv().safe
_G.hunt = getgenv().hunt
_G.buso = getgenv().buso
_G.ken = getgenv().ken
wait(1)
getgenv().players = game.Players:GetPlayers()
getgenv().killed = {}
function getNearestTarget()
dist = math.huge
p = nil
 for i, v in pairs(getgenv().players) do
 
 if v ~= game.Players.LocalPlayer and v.Character and v and p ~= v then 
    
   for _, v2 in pairs(getgenv().killed) do
   if v == v2 then
   unscan = v2
 end
end
  if (v.Character.HumanoidRootPart.CFrame.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position). Magnitude < dist and unscan ~= v then 

   dist = (v.Character.HumanoidRootPart.CFrame.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position). magnitude 
   p = v
 end
 end
 end
return p
end


if getgenv().team == nil or getgenv().team == "Pirates" then
game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetTeam","Pirates")
elseif getgenv().team == "Marines" then
  game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetTeam","Marines")
end


function aimclick(pos)
 local vct2 = workspace.CurrentCamera:WorldToScreenPoint(pos.Position)
local virtualUser = game:GetService("VirtualUser")
local mouse = game.Players.LocalPlayer:GetMouse()

--mouse:SetMousePositionRelative())

virtualUser:Button1Down(Vector2.new(vct2.X, vct2.Z))

end

local lp = game.Players.LocalPlayer
local backpack = lp.Backpack:GetChildren()
local player = game.Players:GetPlayers()
local playerasstring = game.Players:GetChildren()
local lp = game.Players.LocalPlayer
local backpack = lp.Backpack:GetChildren()
local player = game.Players:GetPlayers()
local playerasstring = game.Players:GetChildren()
local defeated = {}


function topos(gotoCFrame) --- Tween
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X, gotoCFrame.Y, game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Z)
    pcall(function()

    if game.Players.LocalPlayer.Character.Humanoid.Health >= 0 then
        game.Players.LocalPlayer.Character.Humanoid.Sit = false
        
    if (game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart.Position - gotoCFrame.Position).Magnitude <= 200 then
        pcall(function() 
            tweenz:Cancel()
        end)
        game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart.CFrame = gotoCFrame
    else
        local tween_s = game:service"TweenService"
        local info = TweenInfo.new((game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart.Position - gotoCFrame.Position).Magnitude/325, Enum.EasingStyle.Linear)
         tween, err = pcall(function()
            tweenz = tween_s:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], info, {CFrame = gotoCFrame})
            tweenz:Play()
        end)
        if not tween then return err end
    end
    end
    function _TweenCanCle()
        tweenz:Cancel()
    end
    end)
end
game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true

function Hop()
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local foundAnything = ""
    local actualHour = os.date("!*t").hour
    local Deleted = false
    function TPReturner()
        local Site
        if foundAnything == "" then
            Site =
                game.HttpService:JSONDecode(
                game:HttpGet(
                    "https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"
                )
            )
        else
            Site =
                game.HttpService:JSONDecode(
                game:HttpGet(
                    "https://games.roblox.com/v1/games/" ..
                        PlaceID .. "/servers/Public?sortOrder=Asc&limit=100&cursor=" .. foundAnything
                )
            )
        end
        local ID = ""
        if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
            foundAnything = Site.nextPageCursor
        end
        local num = 0
        for i, v in pairs(Site.data) do
            local Possible = true
            ID = tostring(v.id)
            if tonumber(v.maxPlayers) > tonumber(v.playing) then
                for _, Existing in pairs(AllIDs) do
                    if num ~= 0 then
                        if ID == tostring(Existing) then
                            Possible = false
                        end
                    else
                        if tonumber(actualHour) ~= tonumber(Existing) then
                            local delFile =
                                pcall(
                                function()
                                    AllIDs = {}
                                    table.insert(AllIDs, actualHour)
                                end
                            )
                        end
                    end
                    num = num + 1
                end
                if Possible == true then
                    table.insert(AllIDs, ID)
                    wait()
                    pcall(
                        function()
                            wait()
                            game:GetService("TeleportService"):TeleportToPlaceInstance(
                                PlaceID,
                                ID,
                                game.Players.LocalPlayer
                            )
                        end
                    )
                    wait(4)
                end
            end
        end
    end
    function Teleport()
        while wait() do
            pcall(
                function()
                    TPReturner()
                    if foundAnything ~= "" then
                        TPReturner()
                    end
                end
            )
        end
    end
    Teleport()
end
                
local lp = game.Players.LocalPlayer
local backpack = lp.Backpack:GetChildren()
local player = game.Players:GetPlayers()
local playerasstring = game.Players:GetChildren()
local defeated = {}
function refreshplayer()
  local player = game.Players:GetPlayers()
  table.insert(player, 1)
  local playerasstring = game.Players:GetChildren()
end


function getTarget()
  for i, v in pairs(player) do
if v.Name == game.Players.LocalPlayer.Name then  end
    return v
 end
end
function getHealth(entity)
  return tonumber(entity.Character.Humanoid.Health)
  end
function getDistanceFrom(p1, p2)
  return (p1 - p2).Magnitude
end
function click ()
wait(.1)
game:GetService('VirtualUser'):CaptureController()
game:GetService('VirtualUser'):ClickButton1(Vector2.new(1660,880))
end

function buso() 
    if(not(game.Players.LocalPlayer.Character:FindFirstChild('HasBuso')))then
local rel = game.ReplicatedStorage

        rel.Remotes.CommF_:InvokeServer('Buso')
    end
end

function keydown(use)

    game:GetService("VirtualInputManager"):SendKeyEvent(true,use,false,game.Players.LocalPlayer.Character.HumanoidRootPart)

    wait(.1)
    game:GetService("VirtualInputManager"):SendKeyEvent(false,use,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
end
function rand()
  if _G.currentweapon == 'melee' then num = math.random(1, 3) end
 if _G.currentweapon == 'df' then num = math.random(1, 5) end
 if _G.currentweapon == 'sword' or _G.currentweapon == 'gun' then num = math.random(1, 3) end

  
  if num == 1 then return 'Z' end
  if num == 2 then return 'X' end
  if num == 3 then return 'C' end
  if num == 4 then return 'V' end
  if num == 5 then return 'F' end
end
function equip(type)
  backpack = game.Players.LocalPlayer.Backpack: GetChildren ()
 if type == 'melee' then slot = 1 end
if type == 'df' then slot = 2 end
if type == 'gun' then slot = 3 end
if type == 'sword' then slot = 4 end
_G.currentweapon = type
  game.Players.LocalPlayer.Character.Humanoid:EquipTool(backpack[slot])
    click()
  end

spawn(

    function()

        pcall(
            function()
                while wait() do
                    if _G.WalkWater then
                        if game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame.Y <= 1 then
                            if not game:GetService("Workspace"):FindFirstChild("Water") then
                                local Water = Instance.new("Part", game:GetService("Workspace"))
                                Water.Name = "Water"
                                Water.Size = Vector3.new(20, 0.5, 20)
                                Water.Anchored = true
                                Water.Material = "Neon"
                                Water.Color = _G.Color
                                game:GetService("Workspace").Water.CFrame =
                                    CFrame.new(
                                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame.X,
                                    game:GetService("Workspace").Camera["Water;"].CFrame.Y,
                                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame.Z
                                )
                            else
                                game:GetService("Workspace").Water.CFrame =
                                    CFrame.new(
                                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame.X,
                                    game:GetService("Workspace").Camera["Water;"].CFrame.Y,
                                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame.Z
                                )
                            end
                        elseif
                            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame.Y >= 1 and
                                game:GetService("Workspace"):FindFirstChild("Water")
                         then
                            game:GetService("Workspace"):FindFirstChild("Water"):Destroy()
                        end
                    else
                        if game:GetService("Workspace"):FindFirstChild("Water") then
                            game:GetService("Workspace"):FindFirstChild("Water"):Destroy()
                        end
                    end
                end
            end
        )
    end
)



  for i, v in pairs(game.Players.LocalPlayer.Backpack: GetChildren ()) do
for i2, v2 in pairs(game.Players.LocalPlayer.Backpack: GetChildren ()) do
    if v:IsA('Tool') and v.Name == v2.Name then
      
end
if v.Name == 'Agility' or v.Name == 'Awakening' then
  game.Players.LocalPlayer.Character.Humanoid:EquipTool(v) 
click()
end
  if math.random(1,2) == 1 then 
  
  break end

            end

           end 

                
    
      _G.WalkWater = true

function hide(v)
 
    
pcf = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
topos(CFrame.new(pcf.X, 500, pcf.Z))
 
end
function bighitbox(part)
  part.Size = Vector3.new(50,50,50)
  return true
end
function getPCFrame(p)
  return p.Character.HumanoidRootPart.CFrame
end
function supersmallhitbox(part)
  part.Size = Vector3.new(1,1,1)
  return true
end
function getPCFrame(p)
  return p.Character.HumanoidRootPart.CFrame
end
function getPVector3(p)
  return p.Character.HumanoidRootPart.Position
end
--[[
spawn(function()

while wait() do
game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
wait(1)
game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
end
end)
]]
spawn(function()
  while getgenv().buso and wait(1) do 
    buso()

 wait()
end
end)


spawn(function ()
   while _G.hunt and wait() do

repeat wait()
     getgenv().target = getNearestTarget()

_G.tick = 0
until getgenv().target 
Notification.new("info", "Auone", getgenv().target.Name)
spawn(function()
    local gg = getrawmetatable(game)
    local old = gg.__namecall
    setreadonly(gg,false)
    gg.__namecall = newcclosure(function(...)
        local method = getnamecallmethod()
        local args = {...}
        if tostring(method) == "FireServer" then
            if tostring(args[1]) == "RemoteEvent" then
                if tostring(args[2]) ~= "true" and tostring(args[2]) ~= "false" then
                    if Playersaimbot ~= nil then
                        args[2] = PlayersPosition
                        return old(unpack(args))
                    end
                end
            end
        end
        return old(...)
    end)
end)
print(getgenv().target)
PlayersPosition = getgenv().target.Character.HumanoidRootPart.CFrame.Position
Playersaimbot = getgenv().target.Name

     wait(.1)
     if getgenv().target.Character then
         
         
spawn(function()
while _G.hunt and wait() do

       if tonumber(game.Players.LocalPlayer.Character.Humanoid.Health) > 5000  then
topos(getgenv().target.Character.HumanoidRootPart.CFrame)
 
end
end
end)
         
           spawn(function()
             while (getgenv().target.Character.HumanoidRootPart.CFrame.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position).Magnitude < 60 and wait() and _G.hunt do
                 wait(.1)
                 
                 _G.tick = _G.tick + 1
equip('melee')
wait(4)
equip('sword')
wait(3)
equip(gun)
print(_G.tick)
             end

           end)

           spawn(function()
             while (getgenv().target.Character.HumanoidRootPart.CFrame.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position).Magnitude < 60 and wait() and _G.hunt do
aimclick(getgenv().target.Character.HumanoidRootPart.CFrame)
_G.tick = _G.tick + 1
keydown(rand())
print(_G.tick)
end
end)

           spawn(function()
             while tonumber(game.Players.LocalPlayer.Character.Humanoid.Health) < 5000 do
wait()
                 hide()
                 
             end 
           end)

         if tonumber(game.Players.LocalPlayer.Character.Humanoid.Health) < 1 or tonumber(getgenv().target.Character.Humanoid.Health) < 1 or _G.tick > _G.maxtick then
wait(1)
         table.insert(getgenv().killed, getgenv().target)
   end
     end
     
   end
spawn(function()
while _G.hunt and wait() do
if #getgenv().killed > 6 then
Hop()
end
end
end)
end)


 